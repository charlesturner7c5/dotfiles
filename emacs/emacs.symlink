;; -*- mode: emacs-lisp -*-

(menu-bar-mode -1)
(when (fboundp 'tool-bar-mode)
  (tool-bar-mode -1))
(when (fboundp 'scroll-bar-mode)
  (scroll-bar-mode -1))
(show-paren-mode 1)

(require 'package)

(add-to-list 'package-archives
	     '("melpa" . "http://melpa.milkbox.net/packages/") t)

(when (< emacs-major-version 24)
  ;; For important compatibility libraries like cl-lib
  (add-to-list 'package-archives '("gnu" . "http://elpa.gnu.org/packages/")))

(package-initialize)

(server-start)

;(require 'helm-config)

(setq backup-directory-alist `(("." . "~/.saves")))
(setq delete-old-versions t
  kept-new-versions 6
  kept-old-versions 2
  version-control t)

(setq-default revert-without-query '("."))

;; Magit
(require 'magit)
(global-set-key (kbd "C-x g") 'magit-status)
(setq magit-last-seen-setup-instructions "1.4.0")

(setq user-full-name "Charlie Turner")
(setq user-email-address "charlesturner7c5@gmail.com")

(setq inhibit-splash-screen t
      initial-scratch-message nil
      initial-major-mode 'text-mode)

(when window-system
  (setq frame-title-format '(buffer-file-name "%f" ("%b"))))

(setq-default indicate-empty-lines t)
(when (not indicate-empty-lines)
  (toggle-indicate-empty-lines))

(ido-mode t)
(setq ido-enable-flex-matching t)

;; Yasnippet
(require 'yasnippet)
(yas-reload-all)

(autoload 'zap-up-to-char "misc"
  "Kill up to, but not including ARGth occurrence of CHAR." t)

(require 'uniquify)
(setq uniquify-buffer-name-style 'forward)

(require 'saveplace)
(setq-default save-place t)

(global-set-key (kbd "RET") 'newline-and-indent)
(global-set-key (kbd "M-/") 'hippie-expand)
(global-set-key (kbd "C-x C-b") 'ibuffer)
(global-set-key (kbd "M-z") 'zap-up-to-char)
(global-set-key (kbd "C-s") 'isearch-forward-regexp)
(global-set-key (kbd "C-r") 'isearch-backward-regexp)
(global-set-key (kbd "C-M-s") 'isearch-forward)
(global-set-key (kbd "C-M-r") 'isearch-backward)
;(global-set-key (kbd "M-x") 'helm-M-x)
;(global-set-key (kbd "C-h f") 'helm-apropos)
;(global-set-key (kbd "C-x C-b") 'helm-buffers-list)
;(global-set-key (kbd "C-x C-f") 'helm-find-files)

(setq-default tab-width 4
              indent-tabs-mode nil)

(setq x-select-enable-clipboard t
      x-select-enable-primary t
      save-interprogram-paste-before-kill t
      mouse-drag-copy-region t
      apropos-do-all t
      mouse-yank-at-point t
      require-final-newline t
      echo-keystrokes 0.1
      visible-bell t
      ediff-window-setup-function 'ediff-setup-windows-plain
      save-place-file (concat user-emacs-directory "places")
      backup-directory-alist `(("." . ,(concat user-emacs-directory
					       "backups"))))

(defalias 'yes-or-no-p 'y-or-n-p)

(add-hook 'org-mode-hook (lambda ()
                           (flyspell-mode)
                           (auto-fill-mode)))
(add-hook 'text-mode-hook (lambda ()
                            (flyspell-mode)
                            (auto-fill-mode)))

;; Hypothesis: These modes are causing CC-mode's indentation to screw up intermitently.
;(require 'rainbow-delimiters)
;;(add-hook 'prog-mode-hook 'rainbow-delimiters-mode)

;; General programming
(add-hook 'prog-mode-hook
	  '(lambda ()
	     (flyspell-prog-mode)
	     (yas-minor-mode)))

(defun untabify-buffer ()
  (interactive)
  (untabify (point-min) (point-max)))

(defun indent-buffer ()
  (interactive)
  (indent-region (point-min) (point-max)))

(defun cleanup-buffer ()
  "Perform a bunch of operations on the whitespace content of a buffer."
  (interactive)
  (indent-buffer)
  (untabify-buffer)
  (delete-trailing-whitespace))

(defun cleanup-region (beg end)
  "Remove tmux artifacts from region."
  (interactive "r")
  (dolist (re '("\\\\│\·*\n" "\W*│\·*"))
    (replace-regexp re "" nil beg end)))

(defun insert-current-date ()
  (interactive)
  (insert (shell-command-to-string "echo -n $(date +%Y-%m-%d)")))

(global-set-key (kbd "C-x M-t") 'cleanup-region)
(global-set-key (kbd "C-c n") 'cleanup-buffer)

(setq-default show-trailing-whitespace t)

;; Use C-x C-m for Alt-x. Free's up the Alt key, and furthermore, it's
;; much easier to type.
(global-set-key "\C-x\C-m" 'execute-extended-command)
;; Make this above more forgiving.
(global-set-key "\C-c\C-m" 'execute-extended-command)

;; It's faster to backward kill a word and retypping it rather than
;; mashing Backspace several times.
(global-set-key "\C-w" 'backward-kill-word)
;; But now kill-region has no binding. C-x C-k and it's forgiving
;; partner take on this role.
(global-set-key "\C-x\C-k" 'kill-region)
(global-set-key "\C-c\C-k" 'kill-region)

;; Shell Scripting ========================================
(add-hook 'sh-mode-hook
          (lambda ()
            (add-hook 'after-save-hook
                      (lambda ()
                        (executable-make-buffer-file-executable-if-script-p))
                      nil
                      t)))

(add-to-list 'auto-mode-alist '("\\.zsh\\'" . shell-script-mode))

;; Lisp ==================================================
(setq inferior-lisp-program "/opt/bin/sbcl")
(setq slime-contribs '(slime-fancy))

;; C / C++ Programming ========================================
;;(add-to-list 'load-path "/home/charlie/src/rtags/src")
;;(add-to-list 'load-path "/home/charlie/src/llvm/utils/emacs")
;;(require 'tablegen-mode)

(add-hook 'c-mode-common-hook
          (lambda ()
            (when (derived-mode-p 'c-mode 'c++-mode 'java-mode)
              (ggtags-mode 1))))

;; C++
(defconst my-cc-style
  '("cc-mode"
    (c-offsets-alist . ((innamespace . [0])))))
(c-add-style "my-cc-mode" my-cc-style)

(defun my-c++-setup ()
  (rebox-mode 1)
  (setq comment-start "/* "
	comment-end " */")
  (setq rebox-style-loop '(23 25)))

(add-hook 'c++-mode-hook #'my-c++-setup)

;;; LLVM
(add-to-list 'load-path
	     (expand-file-name "~/src/llvm/utils/emacs"))
(require 'llvm-mode)
(require 'tablegen-mode)

(add-to-list 'auto-mode-alist '("\\.ll\\'" . llvm-mode))
(add-to-list 'auto-mode-alist '("\\.td\\'" . tablegen-mode))

;; In Gnulib, indent with spaces everywhere (not TABs).
;; Exceptions: Makefile and ChangeLog modes.
(add-hook 'find-file-hook '(lambda ()
  (if (and buffer-file-name
           (string-match "/gnulib\\>" (buffer-file-name))
           (not (string-equal mode-name "Change Log"))
           (not (string-equal mode-name "Makefile")))
      (setq indent-tabs-mode nil))))

;; Go
(add-hook 'before-save-hook 'gofmt-before-save)
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(haskell-mode-hook (quote (turn-on-haskell-indent))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
